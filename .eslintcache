[{"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/index.tsx":"1","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/reportWebVitals.ts":"2","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/localstorage/localstorage.ts":"3","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/store/index.ts":"4","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/App.tsx":"5","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/const.ts":"6","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/browser-history.ts":"7","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/store/user/reducer.ts":"8","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/pages/register-screen/register-screen.tsx":"9","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/pages/game-screen/game-screen.tsx":"10","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/pages/create-lobby/create-lobby.tsx":"11","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/pages/connect-screen/connect-screen.tsx":"12","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/pages/welcome-screen/welcome-screen.tsx":"13","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/pages/auth-screen/auth-screen.tsx":"14","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/components/private-route/private-route.tsx":"15","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/store/game/index.ts":"16","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/store/user/types.ts":"17","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/store/user/actions.ts":"18","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/services/api.ts":"19","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/components/location-item/location-item.tsx":"20","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/components/players-list/players-list.tsx":"21","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/components/connect-component/connect-component.tsx":"22","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/components/create-lobby-component/create-lobby-component.tsx":"23","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/components/menu-button/menu-button.tsx":"24","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/store/game/actions.ts":"25","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/store/game/reducer.ts":"26","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/store/game/types.ts":"27","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/components/player-item/player-item.tsx":"28","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/components/right-arrow-button/right-arrow-button.tsx":"29","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/components/left-arrow-button/left-arrow-button.tsx":"30"},{"size":934,"mtime":1607889828702,"results":"31","hashOfConfig":"32"},{"size":425,"mtime":1606420532345,"results":"33","hashOfConfig":"32"},{"size":555,"mtime":1607889768225,"results":"34","hashOfConfig":"32"},{"size":361,"mtime":1607805259089,"results":"35","hashOfConfig":"32"},{"size":2248,"mtime":1607890404620,"results":"36","hashOfConfig":"32"},{"size":471,"mtime":1607786950572,"results":"37","hashOfConfig":"32"},{"size":129,"mtime":1607679079282,"results":"38","hashOfConfig":"32"},{"size":796,"mtime":1607867375317,"results":"39","hashOfConfig":"32"},{"size":2695,"mtime":1607953221601,"results":"40","hashOfConfig":"32"},{"size":4885,"mtime":1607953726307,"results":"41","hashOfConfig":"32"},{"size":442,"mtime":1607856880807,"results":"42","hashOfConfig":"32"},{"size":404,"mtime":1607865476420,"results":"43","hashOfConfig":"32"},{"size":1229,"mtime":1607800383367,"results":"44","hashOfConfig":"32"},{"size":3032,"mtime":1607953221602,"results":"45","hashOfConfig":"32"},{"size":806,"mtime":1607800129336,"results":"46","hashOfConfig":"32"},{"size":80,"mtime":1607805208429,"results":"47","hashOfConfig":"32"},{"size":522,"mtime":1607859387140,"results":"48","hashOfConfig":"32"},{"size":335,"mtime":1607859110363,"results":"49","hashOfConfig":"32"},{"size":857,"mtime":1608546713217,"results":"50","hashOfConfig":"32"},{"size":1034,"mtime":1607953779001,"results":"51","hashOfConfig":"32"},{"size":494,"mtime":1607867659589,"results":"52","hashOfConfig":"32"},{"size":1037,"mtime":1607865234770,"results":"53","hashOfConfig":"32"},{"size":2779,"mtime":1607861140373,"results":"54","hashOfConfig":"32"},{"size":390,"mtime":1607789725766,"results":"55","hashOfConfig":"32"},{"size":661,"mtime":1607864990895,"results":"56","hashOfConfig":"32"},{"size":917,"mtime":1607865028889,"results":"57","hashOfConfig":"32"},{"size":1280,"mtime":1607864984826,"results":"58","hashOfConfig":"32"},{"size":236,"mtime":1607860080850,"results":"59","hashOfConfig":"32"},{"size":424,"mtime":1607797917431,"results":"60","hashOfConfig":"32"},{"size":419,"mtime":1607797917431,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"qhwiwb",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/index.tsx",[],["130","131"],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/reportWebVitals.ts",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/localstorage/localstorage.ts",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/store/index.ts",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/App.tsx",["132"],"import React from \"react\";\nimport { Switch, Route, Router as BrowserRouter } from \"react-router-dom\";\nimport RegisterScreen from \"./pages/register-screen/register-screen\";\nimport browserHistory from \"./browser-history\";\nimport { AppRoute } from \"./const\";\nimport AuthScreen from \"./pages/auth-screen/auth-screen\";\nimport PrivateRoute from \"./components/private-route/private-route\";\nimport WelcomeScreen from \"./pages/welcome-screen/welcome-screen\";\nimport CreateLobby from \"./pages/create-lobby/create-lobby\";\nimport GameScreen from \"./pages/game-screen/game-screen\";\n\nimport { useSelector } from \"react-redux\";\nimport { ApplicationState } from \"./store/\";\nimport ConnectScreen from \"./pages/connect-screen/connect-screen\";\n\ninterface Props {}\n\nconst App: React.FC<Props> = () => {\n  const isAuthenticated = useSelector(\n    (state: ApplicationState) => state.user.isAuthenticated\n  );\n  sessionStorage.setItem(\"isConnecting\", \"\");\n  return (\n    <BrowserRouter history={browserHistory}>\n      <Switch>\n        <Route\n          // exact\n          path={AppRoute.LOGIN}\n          render={({ history }) => (\n            <AuthScreen\n              redirectTo={() => history.push(AppRoute.ROOT)}\n              redirectToRegister={() => history.push(AppRoute.REGISTER)}\n            />\n          )}\n        />\n        <Route\n          path={AppRoute.REGISTER}\n          render={({ history }) => (\n            <RegisterScreen redirectTo={() => history.push(AppRoute.LOGIN)} />\n          )}\n        />\n        <PrivateRoute\n          path={AppRoute.CREATE_LOBBY}\n          render={({ history }: any) => {\n            return <CreateLobby history={history} />;\n          }}\n        />\n        <PrivateRoute\n          path={AppRoute.GAME}\n          render={({ history }: any) => {\n            return <GameScreen />;\n          }}\n        />\n        <PrivateRoute\n          path={AppRoute.CONNECT}\n          render={({ history }: any) => {\n            return <ConnectScreen history={history} />;\n          }}\n        />\n        <PrivateRoute\n          path={AppRoute.ROOT}\n          render={({ history }: any) => {\n            return <WelcomeScreen history={history} />;\n          }}\n        />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/const.ts",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/browser-history.ts",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/store/user/reducer.ts",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/pages/register-screen/register-screen.tsx",["133"],"import React, { SyntheticEvent, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./register-screen.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { axiosInstance } from \"../../services/api\";\r\nimport { AppRoute } from \"../../const\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  redirectTo: () => void;\r\n}\r\n\r\nconst RegisterScreen: React.FC<Props> = ({ redirectTo }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  let message = errorMessage ? (\r\n    <p className=\"error_message\">{errorMessage}</p>\r\n  ) : null;\r\n  if (errorMessage) {\r\n  }\r\n\r\n  const handleSubmit = (event: SyntheticEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const authData = {\r\n      login: username,\r\n      password: password,\r\n    };\r\n    axiosInstance\r\n      .post(\"/user/new\", JSON.stringify(authData))\r\n      .then((response) => {\r\n        if (response.data.message !== \"Account has been created\")\r\n          throw response.data.message;\r\n        redirectTo();\r\n      })\r\n      .catch((error: any) => {\r\n        setErrorMessage(error);\r\n      });\r\n  };\r\n  return (\r\n    <section className=\"register\">\r\n      <h2 className=\"register__title\">Добро пожаловать в SpyFall!</h2>\r\n      <p className=\"register__text\">Регистрация</p>\r\n      {message}\r\n      <form className=\"register__form\" action=\"\" onSubmit={handleSubmit}>\r\n        <p className=\"register__field\">\r\n          <label className=\"register__label\" htmlFor=\"register\">\r\n            Логин\r\n          </label>\r\n          <input\r\n            className=\"register__input\"\r\n            value={username}\r\n            onChange={(event) => setUsername(event.target.value)}\r\n            type=\"text\"\r\n            name=\"login\"\r\n          />\r\n        </p>\r\n        <p className=\"register__field\">\r\n          <label className=\"register__label\" htmlFor=\"password\">\r\n            Пароль\r\n          </label>\r\n          <input\r\n            className=\"register__input\"\r\n            value={password}\r\n            onChange={(event) => setPassword(event.target.value)}\r\n            type=\"password\"\r\n            name=\"password\"\r\n          />\r\n          <span className=\"register__error\">Неверный пароль</span>\r\n        </p>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Регистрация\r\n        </Button>\r\n      </form>\r\n      <p>\r\n        Есть аккаунт? <Link to={AppRoute.LOGIN}>Войдите</Link>\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/pages/game-screen/game-screen.tsx",["134","135","136","137"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./game-screen.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport LocationItem from \"../../components/location-item/location-item\";\r\nimport ClipboardIcon from \"../../assets/icons/clipboard-icon.svg\";\r\nimport PlayersList from \"../../components/players-list/players-list\";\r\nimport { SetGameState, GameState } from \"../../store/game/\";\r\n\r\ninterface Props {}\r\n\r\nconst GameScreen: React.FC<Props> = (props) => {\r\n  const gameData = useSelector((state: ApplicationState) => state.game);\r\n  const user = useSelector((state: ApplicationState) => state.user);\r\n  const { login } = useSelector((state: ApplicationState) => state.user.user);\r\n  const dispatch = useDispatch();\r\n  const isAdmin = gameData.status === \"Created\";\r\n\r\n  const gameStartHandler = () => {\r\n    fetch(`/lobby/start/${gameData.token}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n    }).then((response) => console.log(response));\r\n  };\r\n  let role = \"\";\r\n  let clickable = false;\r\n  let playersList = null;\r\n  let startButton = isAdmin ? (\r\n      <Button variant=\"success\" onClick={gameStartHandler}>\r\n        Start\r\n      </Button>\r\n  ) : null;\r\n  if (gameData.status === \"Started\") {\r\n    if (gameData.currentloc === \"\") clickable = true;\r\n    startButton = null;\r\n    playersList = <PlayersList playersList={gameData.allplayers} />;\r\n    role = gameData.currentloc === \"\" ? \"Spy\" : \"Peaceful\";\r\n    fetch(`/lobby/checkresult/${gameData.token}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then((response) => updateGameState(response.lobby));\r\n  }\r\n\r\n  if (gameData.status === \"Spy won\") {\r\n    alert(\"Spy won\");\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  if (gameData.status === \"Peaceful won\") {\r\n    alert(\"Peaceful won\");\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  const updateGameState = (lobby: GameState) => {\r\n    console.log(\"update!\");\r\n    dispatch(\r\n      SetGameState({\r\n        token: lobby.token,\r\n        locations: lobby.locations,\r\n        currentloc: lobby.currentloc,\r\n        amountpl: lobby.amountpl,\r\n        amountspy: lobby.amountspy,\r\n        spyplayers: lobby.spyplayers,\r\n        allplayers: lobby.allplayers,\r\n        status: lobby.status,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!sessionStorage.getItem(\"isConnecting\")) {\r\n      if (isAdmin) {\r\n        fetch(`/lobby/adminconnect/${gameData.token}`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            \"Content-Type\": \"application/json;charset=utf-8\",\r\n          },\r\n          body: JSON.stringify({ login: login }),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            updateGameState(response.lobby);\r\n          });\r\n      } else {\r\n        fetch(`/lobby/connect/${gameData.token}`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            \"Content-Type\": \"application/json;charset=utf-8\",\r\n          },\r\n          body: JSON.stringify({ login: login }),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((response) => {\r\n            updateGameState(response.lobby);\r\n          });\r\n      }\r\n      sessionStorage.setItem(\"isConnecting\", \"true\");\r\n    }\r\n  }, []);\r\n\r\n  const copyClickHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    navigator.clipboard.writeText(gameData.token);\r\n  };\r\n\r\n  console.log(gameData);\r\n  const locationItems = gameData.locations.map((location, index) => {\r\n    return (\r\n      <LocationItem\r\n        key={location + index}\r\n        location={location}\r\n        clickable={clickable}\r\n        token={gameData.token}\r\n        login={login}\r\n        updateGameState={updateGameState}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <section className=\"game\">\r\n      {role ? (\r\n        <p className=\"game__role\">\r\n          You are <span style={{ fontWeight: \"bold\" }}>{role}</span>\r\n        </p>\r\n      ) : null}\r\n      <label className=\"game__token\">\r\n        Game Token: <input disabled type=\"text\" value={gameData.token} />\r\n        <button className=\"clipboard-btn\" onClick={copyClickHandler}>\r\n          <img className=\"svg-icon\" src={ClipboardIcon} />\r\n        </button>\r\n      </label>\r\n      <ul className=\"game__list\">{locationItems}</ul>\r\n      {startButton}\r\n      {playersList}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default GameScreen;\r\n","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/pages/create-lobby/create-lobby.tsx",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/pages/connect-screen/connect-screen.tsx",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/pages/welcome-screen/welcome-screen.tsx",["138"],"import React from \"react\";\r\nimport \"./welcome-screen.css\";\r\nimport MenuButton from \"../../components/menu-button/menu-button\";\r\nimport browserHistory from \"../../browser-history\";\r\nimport { AppRoute } from \"../../const\";\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst WelcomeScreen: React.FC<Props> = ({history}) => {\r\n  const redirectToCreateLobbyScreen = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    history.push(AppRoute.CREATE_LOBBY);\r\n  };\r\n\r\n  const redirectToConnectLobbyScreen = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    history.push(AppRoute.CONNECT);\r\n  };\r\n\r\n  const redirectToSettingsScreen = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    history.push(AppRoute.SETTINGS);\r\n  };\r\n\r\n  return (\r\n    <section className=\"welcome\">\r\n      <div className=\"welcome__menu\">\r\n        <MenuButton\r\n          text=\"Create Lobby\"\r\n          clickHandler={redirectToCreateLobbyScreen}\r\n        />\r\n        <MenuButton\r\n          text=\"Connect\"\r\n          clickHandler={redirectToConnectLobbyScreen}\r\n        />\r\n        <MenuButton text=\"Settings\" clickHandler={redirectToSettingsScreen} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default WelcomeScreen;\r\n","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/pages/auth-screen/auth-screen.tsx",["139"],"import React, { SyntheticEvent, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./auth-screen.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { axiosInstance } from \"../../services/api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppRoute } from \"../../const\";\r\nimport { changeAuth, setCurrentUser } from \"../../store/user/actions\";\r\n\r\ninterface Props {\r\n  redirectTo: () => void;\r\n  redirectToRegister: () => void;\r\n}\r\nconst AuthScreen: React.FC<Props> = ({ redirectTo }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  let message = errorMessage ? (\r\n    <p className=\"error_message\">{errorMessage}</p>\r\n  ) : null;\r\n  if (errorMessage) {\r\n  }\r\n\r\n  const handleSubmit = (event: SyntheticEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const authData = {\r\n      login: username,\r\n      password: password,\r\n    };\r\n    axiosInstance\r\n      .post(\"/user/login\", JSON.stringify(authData))\r\n      .then((response) => {\r\n        if (response.data.message !== \"Logged in\") throw response.data.message;\r\n        localStorage.setItem(\"token\", response.data.account.token);\r\n        dispatch(\r\n          setCurrentUser({\r\n            login: username,\r\n            token: response.data.account.token,\r\n          })\r\n        );\r\n        localStorage.setItem(\"login\", username);\r\n        redirectTo();\r\n      })\r\n      .catch((error: string) => {\r\n        setErrorMessage(error);\r\n      });\r\n  };\r\n  return (\r\n    <section className=\"login\">\r\n      <h2 className=\"login__title\">Добро пожаловать в SpyFall!</h2>\r\n      <p className=\"login__text\">Войдите в свой аккаунт</p>\r\n      {message}\r\n      <form className=\"login__form\" action=\"\" onSubmit={handleSubmit}>\r\n        <p className=\"login__field\">\r\n          <label className=\"login__label\" htmlFor=\"login\">\r\n            Логин\r\n          </label>\r\n          <input\r\n            className=\"login__input\"\r\n            value={username}\r\n            onChange={(event) => setUsername(event.target.value)}\r\n            type=\"text\"\r\n            name=\"login\"\r\n          />\r\n        </p>\r\n        <p className=\"login__field\">\r\n          <label className=\"login__label\" htmlFor=\"password\">\r\n            Пароль\r\n          </label>\r\n          <input\r\n            className=\"login__input\"\r\n            value={password}\r\n            onChange={(event) => setPassword(event.target.value)}\r\n            type=\"password\"\r\n            name=\"password\"\r\n          />\r\n          <span className=\"login__error\">Неверный пароль</span>\r\n        </p>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Войти\r\n        </Button>\r\n      </form>\r\n      <p>\r\n        Нет аккаунта? <Link to={AppRoute.REGISTER}>Зарегистрируетесь</Link>\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AuthScreen;\r\n","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/components/private-route/private-route.tsx",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/store/game/index.ts",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/store/user/types.ts",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/store/user/actions.ts",["140"],"import { UserActionTypes, CHANGE_AUTH_STATUS, SET_CURRENT_USER, User } from \"./types\";\r\n\r\nexport const changeAuth = (status: boolean) => {\r\n  return {\r\n    type: CHANGE_AUTH_STATUS,\r\n    payload: status,\r\n  };\r\n};\r\n\r\nexport const setCurrentUser = (user: User) => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: user,\r\n  };\r\n};","/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/services/api.ts",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/components/location-item/location-item.tsx",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/components/players-list/players-list.tsx",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/components/connect-component/connect-component.tsx",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/components/create-lobby-component/create-lobby-component.tsx",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/components/menu-button/menu-button.tsx",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/store/game/actions.ts",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/store/game/reducer.ts",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/store/game/types.ts",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/components/player-item/player-item.tsx",[],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/components/right-arrow-button/right-arrow-button.tsx",[],["141","142"],"/Users/andrejponomarev/Desktop/SIP/Frontend/spyfall/src/components/left-arrow-button/left-arrow-button.tsx",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":19,"column":9,"nodeType":"149","messageId":"150","endLine":19,"endColumn":24},{"ruleId":"147","severity":1,"message":"151","line":17,"column":9,"nodeType":"149","messageId":"150","endLine":17,"endColumn":17},{"ruleId":"147","severity":1,"message":"152","line":1,"column":28,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},{"ruleId":"147","severity":1,"message":"153","line":15,"column":9,"nodeType":"149","messageId":"150","endLine":15,"endColumn":13},{"ruleId":"154","severity":1,"message":"155","line":112,"column":6,"nodeType":"156","endLine":112,"endColumn":8,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":141,"column":11,"nodeType":"160","endLine":141,"endColumn":59},{"ruleId":"147","severity":1,"message":"161","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":22},{"ruleId":"147","severity":1,"message":"162","line":8,"column":10,"nodeType":"149","messageId":"150","endLine":8,"endColumn":20},{"ruleId":"147","severity":1,"message":"163","line":1,"column":10,"nodeType":"149","messageId":"150","endLine":1,"endColumn":25},{"ruleId":"143","replacedBy":"164"},{"ruleId":"145","replacedBy":"165"},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"@typescript-eslint/no-unused-vars","'isAuthenticated' is assigned a value but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'useState' is defined but never used.","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'gameData.token', 'isAdmin', 'login', and 'updateGameState'. Either include them or remove the dependency array.","ArrayExpression",["168"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'browserHistory' is defined but never used.","'changeAuth' is defined but never used.","'UserActionTypes' is defined but never used.",["166"],["167"],"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},"Update the dependencies array to be: [gameData.token, isAdmin, login, updateGameState]",{"range":"171","text":"172"},[3761,3763],"[gameData.token, isAdmin, login, updateGameState]"]